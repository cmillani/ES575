Library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_signed.all;

ENTITY Exp7a IS
	PORT (SW: IN STD_LOGIC_VECTOR(17 downto 0);
		HEX0: OUT STD_LOGIC_VECTOR(0 to 6);
		HEX1: OUT STD_LOGIC_VECTOR(0 to 6);		
		HEX2: OUT STD_LOGIC_VECTOR(0 to 6);
		HEX3: OUT STD_LOGIC_VECTOR(0 to 6);
		HEX4: OUT STD_LOGIC_VECTOR(0 to 6);
		HEX5: OUT STD_LOGIC_VECTOR(0 to 6);
		HEX6: OUT STD_LOGIC_VECTOR(0 to 6);
		HEX7: OUT STD_LOGIC_VECTOR(0 to 6);
		LEDR: OUT STD_LOGIC_VECTOR(17 downto 0);
		KEY : IN STD_LOGIC_VECTOR(3 downto 0));
		--CLOCK_50 : IN STD_LOGIC);
END Exp7a;

ARCHITECTURE experiment OF Exp7a IS	
	
	COMPONENT FlipFlopD IS
		GENERIC(n : NATURAL := 4);
		PORT ( D : IN STD_LOGIC_VECTOR(n-1 downto 0);
			clk, rst : IN STD_LOGIC ;
			Q : OUT STD_LOGIC_VECTOR(n-1 downto 0));
	END COMPONENT FlipFlopD;
	
	SIGNAL Rst, Clk STD_LOGIC;	
	SIGNAL Y STD_LOGIC_VECTOR(8 downto 0);
	
	BEGIN
		Rst <= NOT KEY(1);
		Clk <= Key(0);
		
		A00: FlipFlopD port map (NOT Rst, Clk, Rst, Y(0));
		--A01: FlipFlopD port map ();
		--A02: FlipFlopD port map ();
		--A03: FlipFlopD port map ();
		--A04: FlipFlopD port map ();
		--A05: FlipFlopD port map ();
		--A06: FlipFlopD port map ();
		--A07: FlipFlopD port map ();
		--A08: FlipFlopD port map ();
	
END experiment;