Library ieee;
use ieee.std logic 1164.all;
use ieee.std logic arith.all;
use ieee.std logic signed.all;

ENTITY Exp6a IS
  PORT (SW: IN STD_LOGIC_VECTOR(17 downto 0);
		--HEX0: OUT STD_LOGIC_VECTOR(0 to 6);
		--HEX1: OUT STD_LOGIC_VECTOR(0 to 6);		
		--HEX2: OUT STD_LOGIC_VECTOR(0 to 6);
		--HEX3: OUT STD_LOGIC_VECTOR(0 to 6);
		--HEX4: OUT STD_LOGIC_VECTOR(0 to 6);
		--HEX5: OUT STD_LOGIC_VECTOR(0 to 6);
		--HEX6: OUT STD_LOGIC_VECTOR(0 to 6);
		--HEX7: OUT STD_LOGIC_VECTOR(0 to 6);
		LEDR: OUT STD_LOGIC_VECTOR(17 downto 0);
		KEY : IN STD_LOGIC_VECTOR(3 downto 0);
		CLOCK_50 : IN STD_LOGIC);
END Exp6a;

ARCHITECTURE experimento OF Exp6a IS
	SIGNAL A : STD_LOGIC_VECTOR(7 downto 0);
	SIGNAL sum :  STD_LOGIC_VECTOR(7 downto 0);
	--SIGNAL clk : STD_LOGIC;
	SIGNAL Nrst : STD_LOGIC;
	
	BEGIN
		Nrst <= NOT KEY(0);
		
		PROCESS (sum, A)
			VARIABLE soma : STD_LOGIC_VECTOR(7 downto 0);
			BEGIN
				IF(Nrst = '1') THEN
					soma := 0;
				ELSIF(rising_edge(KEY(1))) THEN
					soma := soma + A;
				END IF;
			sum <= soma;
		END PROCESS;	
			
END experimento;